# Generated by Django 5.0.6 on 2024-07-05 09:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "columns_count",
                    models.SmallIntegerField(
                        default=12,
                        help_text="template columns count",
                        verbose_name="columns count",
                    ),
                ),
                (
                    "sections_horizontal_gap",
                    models.SmallIntegerField(
                        default=10,
                        help_text="template sections horizontal gap",
                        verbose_name="sections horizontal gap",
                    ),
                ),
                (
                    "sections_vertical_gap",
                    models.SmallIntegerField(
                        default=10,
                        help_text="template sections vertical gap",
                        verbose_name="sections vertical gap",
                    ),
                ),
                (
                    "edges_horizontal_gap",
                    models.SmallIntegerField(
                        default=10,
                        help_text="template edges horizontal gap",
                        verbose_name="edges horizontal gap",
                    ),
                ),
                (
                    "edges_vertical_gap",
                    models.SmallIntegerField(
                        default=10,
                        help_text="template edges vertical gap",
                        verbose_name="edges vertical gap",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="instance created at",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="latest update at",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "start_column",
                    models.SmallIntegerField(
                        help_text="section start column", verbose_name="start column"
                    ),
                ),
                (
                    "start_row",
                    models.SmallIntegerField(
                        help_text="section start row", verbose_name="start row"
                    ),
                ),
                (
                    "column_count",
                    models.SmallIntegerField(
                        help_text="section column count", verbose_name="column count"
                    ),
                ),
                (
                    "row_count",
                    models.SmallIntegerField(
                        help_text="section row count", verbose_name="row count"
                    ),
                ),
                (
                    "min_columns",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="section min columns",
                        null=True,
                        verbose_name="min columns",
                    ),
                ),
                (
                    "max_columns",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="section max columns",
                        null=True,
                        verbose_name="max columns",
                    ),
                ),
                (
                    "min_rows",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="section min rows",
                        null=True,
                        verbose_name="min rows",
                    ),
                ),
                (
                    "max_rows",
                    models.SmallIntegerField(
                        blank=True,
                        help_text="section max rows",
                        null=True,
                        verbose_name="max rows",
                    ),
                ),
                (
                    "is_locked",
                    models.BooleanField(
                        default=False,
                        help_text="is section locked",
                        verbose_name="is locked",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        help_text="section's template",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sections",
                        to="template.template",
                        verbose_name="template",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="section",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("max_columns__isnull", True),
                    ("min_columns__isnull", True),
                    ("max_columns__gte", models.F("min_columns")),
                    _connector="OR",
                ),
                name="section_max_columns_must_be_higher_than_min_columns",
            ),
        ),
        migrations.AddConstraint(
            model_name="section",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("max_rows__isnull", True),
                    ("min_rows__isnull", True),
                    ("max_rows__gte", models.F("min_rows")),
                    _connector="OR",
                ),
                name="section_max_rows_must_be_higher_than_min_rows",
            ),
        ),
        migrations.AddConstraint(
            model_name="section",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("min_columns__isnull", True),
                    ("column_count__gte", models.F("min_columns")),
                    _connector="OR",
                ),
                name="section_column_count_must_be_higher_than_min_columns",
            ),
        ),
        migrations.AddConstraint(
            model_name="section",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("min_rows__isnull", True),
                    ("row_count__gte", models.F("min_rows")),
                    _connector="OR",
                ),
                name="section_row_count_must_be_higher_than_min_rows",
            ),
        ),
        migrations.AddConstraint(
            model_name="section",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("max_columns__isnull", True),
                    ("column_count__lte", models.F("max_columns")),
                    _connector="OR",
                ),
                name="section_column_count_must_be_lower_than_max_columns",
            ),
        ),
        migrations.AddConstraint(
            model_name="section",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("max_rows__isnull", True),
                    ("row_count__lte", models.F("max_rows")),
                    _connector="OR",
                ),
                name="section_row_count_must_be_lower_than_max_rows",
            ),
        ),
    ]
